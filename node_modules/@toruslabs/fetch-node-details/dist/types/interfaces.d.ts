import { AbiType, StateMutabilityType } from "web3-utils";
export interface INodePub {
    X: string;
    Y: string;
}
export interface INodeDetails {
    currentEpoch: string;
    nodeListAddress: string;
    torusNodeEndpoints: string[];
    torusNodePub: INodePub[];
    torusIndexes: number[];
    updated: boolean;
}
export declare const TORUS_NETWORK: {
    readonly TESTNET: "testnet";
    readonly MAINNET: "mainnet";
    readonly CYAN: "cyan";
    readonly AQUA: "aqua";
    readonly CELESTE: "celeste";
};
export declare const NETWORK_MAP: {
    mainnet: string;
    testnet: string;
    cyan: string;
    aqua: string;
    celeste: string;
};
export type TORUS_NETWORK_TYPE = (typeof TORUS_NETWORK)[keyof typeof TORUS_NETWORK];
export type NodeDetailManagerParams = {
    network?: TORUS_NETWORK_TYPE | string;
    proxyAddress?: string;
};
export declare const abi: {
    inputs: {
        internalType: string;
        name: string;
        type: string;
    }[];
    name: string;
    outputs: {
        internalType: string;
        name: string;
        type: string;
    }[];
    stateMutability: StateMutabilityType;
    type: AbiType;
}[];
