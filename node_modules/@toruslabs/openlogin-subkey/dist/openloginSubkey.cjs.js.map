{"version":3,"file":"openloginSubkey.cjs.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;ACNA,MAAM,8BAA4B;;;ACAlC,MAAM,+BAA4B;;ACAlC,MAAM,qCAA4B;;ACAlC;AACuD;AAChC;AACwB;AAE/C,MAAMI,CAAC,GAAG,IAAID,6CAAO,CAACD,uDAAiB,CAAC,+EAA+E,CAAC,CAAC;AAEzH,MAAMI,IAAI,GAAG,YAAY;AACzB,MAAMC,OAAO,GAAG,GAAG;AAEZ,SAASC,SAAS,CAACC,IAAY,EAAU;EAC9C,IAAIC,KAAK,GAAGD,IAAI;EAChB,IAAI,OAAOC,KAAK,KAAK,WAAW,EAAEA,KAAK,GAAGJ,IAAI;EAC9C,MAAMK,CAAC,GAAGX,6CAAS,CAAE,GAAEU,KAAM,KAAI,CAAC;EAClC,MAAME,EAAE,GAAGV,uDAAiB,CAAC,IAAID,0BAAE,CAACU,CAAC,CAACE,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,QAAQ,EAAE,CAAC;EAC/D,MAAMC,EAAE,GAAGH,EAAE,CAACI,GAAG,CAACZ,CAAC,CAACa,CAAC,CAAC;EACtB,OAAOF,EAAE;AACX;AAEO,SAASG,gBAAgB,CAACT,IAAa,EAAEU,OAAgB,EAAY;EAC1E,IAAIT,KAAK,GAAGD,IAAI;EAChB,IAAIW,QAAQ,GAAGD,OAAO;EACtB,IAAI,OAAOT,KAAK,KAAK,WAAW,EAAEA,KAAK,GAAGJ,IAAI;EAC9C,IAAI,OAAOa,OAAO,KAAK,WAAW,EAAEC,QAAQ,GAAGb,OAAO;EACtD,MAAMc,GAAG,GAAG,IAAIC,KAAK,CAACF,QAAQ,CAAC;EAC/B,IAAIT,CAAC,GAAGX,6CAAS,CAACM,IAAI,CAAC;EACvB,KAAK,IAAIiB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,EAAEG,CAAC,IAAI,CAAC,EAAE;IACpCZ,CAAC,GAAGX,6CAAS,CAACW,CAAC,CAAC;IAEhB,MAAMa,EAAE,GAAG,IAAIvB,0BAAE,CAACU,CAAC,CAACE,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAACG,GAAG,CAAC,IAAIf,0BAAE,CAACG,CAAC,CAACa,CAAC,CAACH,QAAQ,EAAE,CAAC,CAAC;IAC7D,MAAMW,EAAE,GAAGD,EAAE,CAACV,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC;IAC9BO,GAAG,CAACE,CAAC,CAAC,GAAGnB,CAAC,CAACsB,CAAC,CAAC,IAAIzB,0BAAE,CAACwB,EAAE,EAAE,EAAE,CAAC,CAACX,QAAQ,EAAE,CAAC;EACzC;EACAO,GAAG,CAAC,CAAC,CAAC,GAAGjB,CAAC,CAACsB,CAAC,CAAC,CAAC,CAAC;EACfL,GAAG,CAACA,GAAG,CAACM,MAAM,GAAG,CAAC,CAAC,GAAGvB,CAAC,CAACsB,CAAC,CAAC,CAAC,CAAC;EAC5B,OAAOL,GAAG;AACZ;AAEA,MAAMA,GAAG,GAAGH,gBAAgB,CAACZ,IAAI,EAAEC,OAAO,CAAC;AAEpC,SAASqB,QAAQ,CACtBC,MAAW,EACXC,MAAW,EACXC,EAAO,EAIP;EACA,IAAIC,EAAE,GAAG5B,CAAC,CAACsB,CAAC,CAACG,MAAM,CAAC;EACpB,IAAII,EAAE,GAAG7B,CAAC,CAACsB,CAAC,CAACI,MAAM,CAAC;EACpB,MAAMI,CAAC,GAAG9B,CAAC,CAACsB,CAAC,CAACK,EAAE,CAAC;EACjB,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhB,OAAO,EAAEgB,CAAC,IAAI,CAAC,EAAE;IACnC,MAAMZ,CAAC,GAAGU,GAAG,CAACE,CAAC,CAAC;IAChB,MAAMY,CAAC,GAAGZ,CAAC,KAAK,CAAC,GAAGnB,CAAC,CAACgC,GAAG,CAACJ,EAAE,EAAEE,CAAC,CAAC,GAAG9B,CAAC,CAACgC,GAAG,CAAChC,CAAC,CAACgC,GAAG,CAACJ,EAAE,EAAEE,CAAC,CAAC,EAAEvB,CAAC,CAAC;IACzD,MAAM0B,MAAM,GAAGjC,CAAC,CAACsB,CAAC,CAACO,EAAE,CAAC;IACtB,IAAIV,CAAC,GAAGhB,OAAO,GAAG,CAAC,EAAE;MACnB0B,EAAE,GAAGD,EAAE;MACPA,EAAE,GAAG5B,CAAC,CAACgC,GAAG,CAACC,MAAM,EAAEjC,CAAC,CAACkC,GAAG,CAACH,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC,MAAM;MACLF,EAAE,GAAG7B,CAAC,CAACgC,GAAG,CAACC,MAAM,EAAEjC,CAAC,CAACkC,GAAG,CAACH,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC;EACF;EACA,OAAO;IACLH,EAAE,EAAE5B,CAAC,CAACmC,SAAS,CAACP,EAAE,CAAC;IACnBC,EAAE,EAAE7B,CAAC,CAACmC,SAAS,CAACN,EAAE;EACpB,CAAC;AACH;AAEO,SAASO,aAAa,CAACC,GAAU,EAAEC,GAAQ,EAAEC,UAAkB,EAAY;EAChF,IAAIC,IAAI,GAAGF,GAAG;EACd,IAAIG,WAAW,GAAGF,UAAU;EAC5B,IAAI,OAAOE,WAAW,KAAK,WAAW,EAAE;IACtCA,WAAW,GAAG,CAAC;EACjB;EACA,IAAI,OAAOD,IAAI,KAAK,WAAW,EAAE;IAC/BA,IAAI,GAAGxC,CAAC,CAAC0C,IAAI;EACf;EAEA,IAAIC,CAAC,GAAG3C,CAAC,CAAC0C,IAAI;EACd,IAAIE,CAAC,GAAG5C,CAAC,CAAC0C,IAAI;EAEd,KAAK,IAAIvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkB,GAAG,CAACd,MAAM,EAAEJ,CAAC,IAAI,CAAC,EAAE;IACtCwB,CAAC,GAAG3C,CAAC,CAACgC,GAAG,CAACW,CAAC,EAAE3C,CAAC,CAACsB,CAAC,CAACe,GAAG,CAAClB,CAAC,CAAC,CAAC,CAAC;IACzB,MAAM0B,CAAC,GAAGrB,QAAQ,CAACmB,CAAC,EAAEC,CAAC,EAAEJ,IAAI,CAAC;IAC9BG,CAAC,GAAGE,CAAC,CAACjB,EAAE;IACRgB,CAAC,GAAGC,CAAC,CAAChB,EAAE;EACV;EACA,MAAMiB,OAAO,GAAG,CAACH,CAAC,CAAC;EACnB,KAAK,IAAIxB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsB,WAAW,EAAEtB,CAAC,IAAI,CAAC,EAAE;IACvC,MAAM0B,CAAC,GAAGrB,QAAQ,CAACmB,CAAC,EAAEC,CAAC,EAAEJ,IAAI,CAAC;IAC9BG,CAAC,GAAGE,CAAC,CAACjB,EAAE;IACRgB,CAAC,GAAGC,CAAC,CAAChB,EAAE;IACRiB,OAAO,CAACC,IAAI,CAACJ,CAAC,CAAC;EACjB;EACA,IAAIF,WAAW,KAAK,CAAC,EAAE;IACrB,OAAOzC,CAAC,CAACmC,SAAS,CAACW,OAAO,CAAC,CAAC,CAAC,CAAC;EAChC;EACA,OAAOA,OAAO,CAACE,GAAG,CAAEC,CAAC,IAAKjD,CAAC,CAACmC,SAAS,CAACc,CAAC,CAAC,CAAC;AAC3C;;AClGuB;AAEiB;AAEjC,MAAMC,iBAAiB,GAAG,kEAAkE;;AAEnG;AACO,SAASC,MAAM,CAACC,MAAc,EAAEC,KAAa,EAAU;EAC5D,MAAMC,UAAU,GAAG,IAAIzD,0BAAE,CAACuD,MAAM,EAAE,KAAK,CAAC,CAAC1C,QAAQ,CAAC,EAAE,CAAC;EACrD;EACA;EACA,MAAM6C,SAAS,GAAG,IAAI1D,0BAAE,CAACwD,KAAK,CAAC,CAACG,IAAI,CAAC,IAAI3D,0BAAE,CAACqD,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAACxC,QAAQ,CAAC,EAAE,CAAC;EAEnF,MAAM+C,MAAM,GAAGjC,QAAQ,CAAC,CAAC,EAAE8B,UAAU,EAAEC,SAAS,CAAC;EACjD,OAAOE,MAAM,CAAC7B,EAAE,CAAClB,QAAQ,CAAC,EAAE,CAAC;AAC/B;;ACfgC","sources":["webpack://@toruslabs/openlogin-subkey/webpack/bootstrap","webpack://@toruslabs/openlogin-subkey/webpack/runtime/compat get default export","webpack://@toruslabs/openlogin-subkey/webpack/runtime/define property getters","webpack://@toruslabs/openlogin-subkey/webpack/runtime/hasOwnProperty shorthand","webpack://@toruslabs/openlogin-subkey/webpack/runtime/make namespace object","webpack://@toruslabs/openlogin-subkey/external commonjs2 \"bn.js\"","webpack://@toruslabs/openlogin-subkey/external commonjs2 \"@toruslabs/openlogin-utils\"","webpack://@toruslabs/openlogin-subkey/external commonjs2 \"ffjavascript\"","webpack://@toruslabs/openlogin-subkey/./src/mimcsponge.ts","webpack://@toruslabs/openlogin-subkey/./src/keyDerivation.ts","webpack://@toruslabs/openlogin-subkey/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"bn.js\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/openlogin-utils\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"ffjavascript\");","/* eslint-disable camelcase */\nimport { keccak256 } from \"@toruslabs/openlogin-utils\";\nimport BN from \"bn.js\";\nimport { Scalar, ZqField } from \"ffjavascript\";\n\nconst F = new ZqField(Scalar.fromString(\"21888242871839275222246405745257275088548364400416034343698204186575808495617\"));\n\nconst SEED = \"mimcsponge\";\nconst NROUNDS = 220;\n\nexport function mimgGetIV(seed: string): bigint {\n  let _seed = seed;\n  if (typeof _seed === \"undefined\") _seed = SEED;\n  const c = keccak256(`${_seed}_iv`);\n  const cn = Scalar.fromString(new BN(c.slice(2), 16).toString());\n  const iv = cn.mod(F.p);\n  return iv;\n}\n\nexport function mimcGetConstants(seed?: string, nRounds?: number): bigint[] {\n  let _seed = seed;\n  let _nRounds = nRounds;\n  if (typeof _seed === \"undefined\") _seed = SEED;\n  if (typeof nRounds === \"undefined\") _nRounds = NROUNDS;\n  const cts = new Array(_nRounds);\n  let c = keccak256(SEED);\n  for (let i = 1; i < _nRounds; i += 1) {\n    c = keccak256(c);\n\n    const n1 = new BN(c.slice(2), 16).mod(new BN(F.p.toString()));\n    const c2 = n1.toString(16, 64);\n    cts[i] = F.e(new BN(c2, 16).toString());\n  }\n  cts[0] = F.e(0);\n  cts[cts.length - 1] = F.e(0);\n  return cts;\n}\n\nconst cts = mimcGetConstants(SEED, NROUNDS);\n\nexport function mimcHash(\n  _xL_in: any,\n  _xR_in: any,\n  _k: any\n): {\n  xL: bigint;\n  xR: bigint;\n} {\n  let xL = F.e(_xL_in);\n  let xR = F.e(_xR_in);\n  const k = F.e(_k);\n  for (let i = 0; i < NROUNDS; i += 1) {\n    const c = cts[i];\n    const t = i === 0 ? F.add(xL, k) : F.add(F.add(xL, k), c);\n    const xR_tmp = F.e(xR);\n    if (i < NROUNDS - 1) {\n      xR = xL;\n      xL = F.add(xR_tmp, F.pow(t, 5));\n    } else {\n      xR = F.add(xR_tmp, F.pow(t, 5));\n    }\n  }\n  return {\n    xL: F.normalize(xL),\n    xR: F.normalize(xR),\n  };\n}\n\nexport function mimcMultiHash(arr: any[], key: any, numOutputs: number): bigint[] {\n  let _key = key;\n  let _numOutputs = numOutputs;\n  if (typeof _numOutputs === \"undefined\") {\n    _numOutputs = 1;\n  }\n  if (typeof _key === \"undefined\") {\n    _key = F.zero;\n  }\n\n  let R = F.zero;\n  let C = F.zero;\n\n  for (let i = 0; i < arr.length; i += 1) {\n    R = F.add(R, F.e(arr[i]));\n    const S = mimcHash(R, C, _key);\n    R = S.xL;\n    C = S.xR;\n  }\n  const outputs = [R];\n  for (let i = 1; i < _numOutputs; i += 1) {\n    const S = mimcHash(R, C, _key);\n    R = S.xL;\n    C = S.xR;\n    outputs.push(R);\n  }\n  if (_numOutputs === 1) {\n    return F.normalize(outputs[0]);\n  }\n  return outputs.map((x) => F.normalize(x));\n}\n","import BN from \"bn.js\";\n\nimport { mimcHash } from \"./mimcsponge\";\n\nexport const SECP256K1_CURVE_N = \"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\";\n\n// creates sub-keys via MiMC hash, output keys are not padded\nexport function subkey(keyHex: string, input: Buffer): string {\n  const privKeyBuf = new BN(keyHex, \"hex\").toString(10);\n  // TODO: check against existing usage of mimc\n  // TODO: check that MPC is possible with mimc, with tests\n  const inputPath = new BN(input).umod(new BN(SECP256K1_CURVE_N, \"hex\")).toString(10);\n\n  const output = mimcHash(1, privKeyBuf, inputPath);\n  return output.xL.toString(16);\n}\n","export * from \"./keyDerivation\";\nexport * from \"./mimcsponge\";\n"],"names":["keccak256","BN","Scalar","ZqField","F","fromString","SEED","NROUNDS","mimgGetIV","seed","_seed","c","cn","slice","toString","iv","mod","p","mimcGetConstants","nRounds","_nRounds","cts","Array","i","n1","c2","e","length","mimcHash","_xL_in","_xR_in","_k","xL","xR","k","t","add","xR_tmp","pow","normalize","mimcMultiHash","arr","key","numOutputs","_key","_numOutputs","zero","R","C","S","outputs","push","map","x","SECP256K1_CURVE_N","subkey","keyHex","input","privKeyBuf","inputPath","umod","output"],"sourceRoot":""}